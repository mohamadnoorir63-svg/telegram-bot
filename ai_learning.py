import re
from memory_manager import learn, load_data, save_data

# ðŸ§  ÛŒØ§Ø¯Ú¯ÛŒØ±ÛŒ Ø®ÙˆØ¯Ú©Ø§Ø± Ø¨Ø± Ø§Ø³Ø§Ø³ Ø§Ù„Ú¯ÙˆÛŒ Ø³Ø§Ø¯Ù‡ Ø¬Ù…Ù„Ù‡â€ŒÙ‡Ø§
def auto_learn_from_text(text: str):
    """ÛŒØ§Ø¯Ú¯ÛŒØ±ÛŒ Ø®ÙˆØ¯Ú©Ø§Ø± Ø§Ø² Ø³Ø§Ø®ØªØ§Ø± Ø¬Ù…Ù„Ù‡â€ŒÙ‡Ø§ÛŒ Ú©Ø§Ø±Ø¨Ø±Ø§Ù†"""
    if not text or len(text) < 4:
        return

    memory = load_data("memory.json")
    data = memory.get("data", {})

    # Ø§Ù„Ú¯ÙˆÙ‡Ø§ÛŒ Ø³Ø§Ø¯Ù‡ Ø¨Ø±Ø§ÛŒ Ù¾Ø±Ø³Ø´/Ù¾Ø§Ø³Ø®
    questions = ["?", "Ú†Ø·ÙˆØ±ÛŒ", "Ú©Ø¬Ø§ÛŒÛŒ", "Ú†ÛŒÚ©Ø§Ø± Ù…ÛŒâ€ŒÚ©Ù†ÛŒ", "Ø§Ø³Ù…Øª Ú†ÛŒÙ‡"]
    answers = ["Ø®ÙˆØ¨Ù…", "Ø§ÛŒÙ†Ø¬Ø§Ù…", "Ø¯Ø± Ø­Ø§Ù„ Ø®Ø¯Ù…Øª ðŸ¤–", "Ø§Ø³Ù…Ù… Ø®Ù†Ú¯ÙˆÙ„Ù‡ ðŸ˜…"]

    for q, a in zip(questions, answers):
        if q in text:
            if q not in data:
                learn(q, a)
            else:
                if a not in data[q]:
                    data[q].append(a)
                    save_data("memory.json", memory)
            break

# âœ¨ Ù†Ø³Ø®Ù‡â€ŒÛŒ Ø¬Ø¯ÛŒØ¯ Ø¯Ø§Ø±Ø§ÛŒ auto-clean Ø¨Ø±Ø§ÛŒ Ø¬Ù„ÙˆÚ¯ÛŒØ±ÛŒ Ø§Ø² ØªÚ©Ø±Ø§Ø± Ø²ÛŒØ§Ø¯
def clean_duplicates():
    mem = load_data("memory.json")
    if not mem.get("data"):
        return
    changed = False
    for k, v in mem["data"].items():
        unique = list(set(v))
        if len(unique) != len(v):
            mem["data"][k] = unique
            changed = True
    if changed:
        save_data("memory.json", mem)
